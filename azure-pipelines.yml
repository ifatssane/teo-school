trigger:
  paths:
    exclude:
    - scripts/infrastructure
    - scripts/pipelines
stages:
- stage: CI
  displayName: 'Continuous Integration'
  jobs:
  - job: Job_1
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - checkout: self
      clean: true
    - task: Docker@2
      displayName: Build RNG
      condition: succeededOrFailed()
      inputs:
        containerRegistry: 'dockercoinsacr'
        repository: jaouadifatssane/RNG
        command: buildAndPush
        Dockerfile: rng/Dockerfile
        tags: $(Build.Buildid)
    - task: Docker@2
      displayName: Build Hacher
      condition: succeededOrFailed()
      inputs:
        containerRegistry: 'dockercoinsacr'
        repository: jaouadifatssane/hacher
        command: buildAndPush
        Dockerfile: hasher/Dockerfile
        tags: $(Build.Buildid)
    - task: Docker@2
      displayName: Build Worker
      condition: succeededOrFailed()
      inputs:
        containerRegistry: 'dockercoinsacr'
        repository: jaouadifatssane/worker
        command: buildAndPush
        Dockerfile: worker/Dockerfile
        tags: $(Build.Buildid)
    - task: Docker@2
      displayName: Build Webui
      condition: succeededOrFailed()
      inputs:
        containerRegistry: 'dockercoinsacr'
        repository: jaouadifatssane/webui
        command: buildAndPush
        Dockerfile: webui/Dockerfile
        tags: $(Build.Buildid)

- stage: DeployDev
  displayName: 'Deploy to Dev env'
  dependsOn: CI
  jobs:
  - deployment: dev_deploy
    pool:
      vmImage: ubuntu-latest
    environment: 'DevEnv'
    strategy:
      runOnce:
        deploy:
          steps:
            - script: echo "hello, dev world !!!"